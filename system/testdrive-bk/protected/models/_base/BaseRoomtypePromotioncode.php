<?php

/**
 * This is the model base class for the table "roomtype_promotioncode".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "RoomtypePromotioncode".
 *
 * Columns in table "roomtype_promotioncode" available as properties of the model,
 * followed by relations of table "roomtype_promotioncode" available as properties of the model.
 *
 * @property integer $id
 * @property integer $promotion_id
 * @property string $rt_id
 *
 * @property RoomType $rt
 * @property PromotionCode $promotion
 */
abstract class BaseRoomtypePromotioncode extends GxActiveRecord {

    public static function model($className = __CLASS__) {
        return parent::model($className);
    }

    public function tableName() {
        return 'roomtype_promotioncode';
    }

    public static function label($n = 1) {
        return Yii::t('app', 'RoomtypePromotioncode|RoomtypePromotioncodes', $n);
    }

    public static function representingColumn() {
        return 'rt_id';
    }

    public function rules() {
        return array(
            array('promotion_id', 'UniqueAttributesValidator', 'with' => 'rt_id', 'message' => 'This promotion ID and room type ID is already in used!'),
            array('promotion_id, rt_id', 'required'),
            //array('promotion_id', 'numerical', 'integerOnly' => true),
            array('rt_id, promotion_id', 'length', 'max' => 32),
            array('id, promotion_id, rt_id', 'safe', 'on' => 'search'),
        );
    }

    public function relations() {
        return array(
            'rt' => array(self::BELONGS_TO, 'RoomType', 'rt_id'),
            'promotion' => array(self::BELONGS_TO, 'PromotionCode', 'promotion_id'),
        );
    }

    public function pivotModels() {
        return array(
        );
    }

    public function attributeLabels() {
        return array(
            'id' => Yii::t('app', 'ID'),
            'promotion_id' => null,
            'rt_id' => null,
            'rt' => null,
            'promotion' => null,
        );
    }

    public function search() {
        $criteria = new CDbCriteria;

        $criteria->compare('id', $this->id);
        $criteria->compare('promotion_id', $this->promotion_id);
        $criteria->compare('rt_id', $this->rt_id);

        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
        ));
    }

}

<?php

/**
 * This is the model base class for the table "reservation_code".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "ReservationCode".
 *
 * Columns in table "reservation_code" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $id
 * @property integer $reservation_id
 * @property string $status
 * @property integer $create_date
 * @property integer $update_date
 *
 */
abstract class BaseReservationCode extends GxActiveRecord {

    public static function model($className = __CLASS__) {
        return parent::model($className);
    }

    public function tableName() {
        return 'reservation_code';
    }

    public static function label($n = 1) {
        return Yii::t('app', 'ReservationCode|ReservationCodes', $n);
    }

    public static function representingColumn() {
        return 'status';
    }

    public function rules() {
        return array(
            //array('reservation_id, status, create_date, update_date', 'required'),
            array('reservation_id, status', 'required'),
            array('reservation_id, create_date, update_date', 'numerical', 'integerOnly' => true),
            array('status', 'length', 'max' => 32),
            array('id, reservation_id, status, create_date, update_date', 'safe', 'on' => 'search'),
        );
    }

    public function relations() {
        return array(
        );
    }

    public function pivotModels() {
        return array(
        );
    }

    public function attributeLabels() {
        return array(
            'id' => Yii::t('app', 'ID'),
            'reservation_id' => Yii::t('app', 'Reservation'),
            'status' => Yii::t('app', 'Status'),
            'create_date' => Yii::t('app', 'Create Date'),
            'update_date' => Yii::t('app', 'Update Date'),
        );
    }

    public function search() {
        $criteria = new CDbCriteria;

        $criteria->compare('id', $this->id);
        $criteria->compare('reservation_id', $this->reservation_id);
        $criteria->compare('status', $this->status, true);
        $criteria->compare('create_date', $this->create_date);
        $criteria->compare('update_date', $this->update_date);

        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
            'pagination' => array(
                'pageSize' => Yii::app()->params['CGridViewPagination']['defaultPageSize'],
            ),
            'sort' => array(
                'defaultOrder' => 'id DESC'
            )
        ));
    }

    protected function afterFind() {
        // convert to display format

        if ($this->update_date != 0) {
            $this->update_date = Yii::app()->getDateFormatter()->format(Yii::app()->params->dateFormat['long_time'], $this->update_date);
        } else {
            $this->update_date = '--';
        }

        if ($this->lock_date != 0) {
            $this->lock_date = Yii::app()->getDateFormatter()->format(Yii::app()->params->dateFormat['long_time'], $this->lock_date);
        } else {
            $this->lock_date = '--';
        }


        parent::afterFind();
    }

    public function renderStatus($data, $row) {
        // ... generate the output for a full address
        // Params:
        // $data ... the current row data   
        // $row ... the row index    
        if ($data == '0') {
            $data = 'available';
        } else if ($data == '2') {
            $data = 'locked';
        } else {
            $data = 'used';
        }
        return $data;
    }

}

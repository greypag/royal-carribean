<?php

/**
 * This is the model base class for the table "cruise".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Cruise".
 *
 * Columns in table "cruise" available as properties of the model,
 * followed by relations of table "cruise" available as properties of the model.
 *
 * @property string $cruise_id
 * @property string $cruise_name
 *
 * @property RoomType[] $roomTypes
 */
abstract class BaseCruise extends GxActiveRecord {

    public static function model($className = __CLASS__) {
        return parent::model($className);
    }

    public function tableName() {
        return 'cruise';
    }

    public static function label($n = 1) {
        return Yii::t('app', 'Cruise|Cruises', $n);
    }

    public static function representingColumn() {
        //return 'cruise_id';
        return 'cruise_name';
        //return array('cruise_id', 'cruise_name');
    }

    public function rules() {
        return array(
            array('cruise_id, cruise_name, cruise_name_tc', 'required'),
            array('cruise_id', 'unique', 'className' => 'Cruise',
                'attributeName' => 'cruise_id',
                'message' => 'This cruise ID is already in use!'),
            array('cruise_id, cruise_name, cruise_name_tc', 'length', 'max' => 32),
            array('cruise_id, cruise_name, cruise_name_tc', 'safe', 'on' => 'search'),
        );
    }

    public function relations() {
        return array(
            'itineraries' => array(self::HAS_MANY, 'Itinerary', 'cruise_id'),
            'roomTypes' => array(self::HAS_MANY, 'RoomType', 'cruise_id'),
        );
    }

    public function pivotModels() {
        return array(
        );
    }

    public function attributeLabels() {
        return array(
            'cruise_id' => Yii::t('app', 'Cruise ID'),
            'cruise_name' => Yii::t('app', 'Ship'),
            'cruise_name_tc' => Yii::t('app', 'Ship (TC)'),
            'itineraries' => null,
            'roomTypes' => null,
        );
    }

    public function search() {
        $criteria = new CDbCriteria;

        $criteria->compare('cruise_id', $this->cruise_id, true);
        $criteria->compare('cruise_name', $this->cruise_name, true);
        $criteria->compare('cruise_name_tc', $this->cruise_name, true);

        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
            'pagination' => array(
                'pageSize' => 30,
            ),
        ));
    }

    protected function beforeSave() {

        $this->update_time = time();
        //if ($model->cruise_id != $_POST['Cruise']['cruise_id']) {
        /*


          //CVarDumper::dump($itineraryModel, 10, true);
          //CVarDumper::dump($room_typeModel, 10, true);


          $criteria = new CDbCriteria;
          $criteria->addCondition('cruise_id=' . $this->cruise_id);
          RoomType::model()->updateAll(
          array(
          'cruise_id' => $this->cruise_id,
          $criteria
          )
          );


          $criteria = new CDbCriteria;
          $criteria->addCondition('cruise_id=' . $this->cruise_id);
          Itinerary::model()->updateAll(
          array(
          'cruise_id' => $this->cruise_id,
          $criteria
          )
          );
         */
        //}
        return parent::beforeSave();
    }

}
